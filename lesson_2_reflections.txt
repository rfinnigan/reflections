What happens when you initialize a repository? Why do you need to do it?
a .git file is created in the working directory
git begins to monitor the status of the files
within that directory
you need to do it to mark a directory as asource for the repository

How is the staging area different from the working directory and the repository? What value do you think it offers?
It contains only the files to be commited in the next commit
The working directory contains all the files that can be worked on
The repository contains all the files which have been commited

How can you use the staging area to make sure you have one commit per logical change?
You can use git diff and git diff --staging to compare the working directory, staging area and repository 
adding or removing files to make the commits apply to logical changes

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When adding new features to an exisiting fully functioning program
Trying to different ways of coding a feature to see which works better
When collaborating multiple people could work on new features 
simultaneously on different branches

How do the diagrams help you visualize the branch structure?
Diagrams allow you to see where branches come from
Which commits are unreachable
Which commits are parents to subsequent commits